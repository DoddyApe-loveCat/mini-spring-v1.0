package com.csii.minispring.dtd;

import java.io.IOException;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;

import org.junit.Test;
import org.w3c.dom.Document;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.xml.sax.SAXException;

import com.csii.minispring.io.ClassPathResource;



public class DtdValidateTest {

	@Test
	public void testValidateDtd() {
		
		ClassPathResource configResource = new ClassPathResource(path);
		
		DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();
		DocumentBuilder dBuilder;
		try {
			dBuilder = dbFactory.newDocumentBuilder();
			Document doc = dBuilder.parse(configResource.getFile());
			doc.getDocumentElement().normalize();
			NodeList nodeList = doc.getElementsByTagName("bean");
			for (int i = 0; i < nodeList.getLength(); i++) {
				Node node = nodeList.item(i);
				doLoadBeanDefinition(node);
			}
		} catch (SAXException e) {
			e.printStackTrace();
		} catch (ParserConfigurationException e) {

		} catch (IOException e) {

		}
	}
}
